import org.junit.Test;

import static org.junit.Assert.assertEquals;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import macro.Macro;
import macro.MacroSharpen;
import model.Image;
import model.ImageImpl;
import model.Pixel;

/**
 * Tests for sharpen macro.
 */
public class MacroSharpenTest {
  private Pixel getConstPixel(int i) {
    return new Pixel(i, i, i);
  }

  @Test
  public void testSharpen() {
    List<List<Pixel>> pixels = new ArrayList<>(new ArrayList<>());
    for (int i = 0; i < 5; i++) {
      List<Pixel> row = new ArrayList<>();
      for (int j = 0; j < 5; j++) {
        row.add(getConstPixel(16));
      }
      pixels.add(row);
    }
    Image img = new ImageImpl(5, 5, 255, pixels);
    Macro macro = new MacroSharpen();
    macro.apply(img);
    assertEquals(img, new ImageImpl(5, 5, 255,
            new ArrayList<>(Arrays.asList(
                    Arrays.asList(getConstPixel(18), getConstPixel(24), getConstPixel(18),
                            getConstPixel(24), getConstPixel(18)),
                    Arrays.asList(getConstPixel(24), getConstPixel(34), getConstPixel(26),
                            getConstPixel(34), getConstPixel(24)),
                    Arrays.asList(getConstPixel(18), getConstPixel(26), getConstPixel(16),
                            getConstPixel(26), getConstPixel(18)),
                    Arrays.asList(getConstPixel(24), getConstPixel(34), getConstPixel(26),
                            getConstPixel(34), getConstPixel(24)),
                    Arrays.asList(getConstPixel(18), getConstPixel(24), getConstPixel(18),
                            getConstPixel(24), getConstPixel(18))))));
  }
}